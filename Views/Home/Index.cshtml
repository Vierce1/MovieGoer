@model IndexViewModel

@{
    ViewData["Title"] = "MovieGoer";
}
@*header and logo*@
<div>
            <table>
            <thead class="table-new">
                <tr>
                    <th>
                          <img src="/image/MovieGoerLogo.png" width="720" height="320" style="margin-left: 0px;" alt="Logo Image">
                           </th>
                           <th class="text-chenter">
                               <h1>
                               MovieGoer is an expansive movie suggestion app - dedicated to transporting you back in time to experience a movie and surrounding culture.
                               </h1>
                           </th>
                  </tr>
            </table>
      
</div>



@*registration/sign in*@
@if (Model == null || Model.usernameInvalid || Model.usernameTaken || Model.passwordInvalid || Model.couldNotSignIn)
{

    @using (Html.BeginForm("Index", "Home", FormMethod.Post))
    {
        <head> Register to save movies
        </head> 


        <table> 
            <tr> 
                <td> Username: </td> <td>  @Html.TextBoxFor(m => m.userName, new {placeholder="Username"}) @*<input type = "text", placeholder = "username" /> *@
                </td> 
            </tr>
            <tr> 
                <td> Password: </td> <td>  @Html.TextBoxFor(m => m.password, new {placeholder="Password"}) @*<input type = "text", placeholder = "password" />*@
                </td> 
            </tr> 
        </table> 

        <td>
           <button type="submit"   id="Register" value="Sign In" onclick="SignInOnClick"   CausesValidation="False" UseSubmitBehavior="false" asp-action="SignInOnClick">Sign In</button>
            <button type="submit"   id="Register" value="Register" onclick="RegisterOnClick"   CausesValidation="False" UseSubmitBehavior="false" asp-action="RegisterOnClick">Register</button>

        </td>
    }
}
<div>
    @if(Model != null)
    {
        @if(Model.usernameInvalid){ <p>Username invalid - must be between 6 - 20 characters</p>}
    @if(Model.usernameTaken){ <p>Username taken, please try another</p>}
    @if(Model.passwordInvalid) { <p>Password invalid - must be between 8 - 20 characters</p>}
    @if(Model.couldNotSignIn) { <p> Could not sign in. Username or Password incorrect</p>}

}
@if(Model !=null)
{
   @if(Model.signedIn) {<p> Signed in!</p>}    
}
    
</div>




<div class="text-center" style = "margin-left: 200px; margin-right: 200px;">
    <h1 style = "color:#00227c; font-size:20px;">
        <br />
        <br /><br />Choose a topic or genre and get a list of 20th Century movies. You'll get to see what major world events occured when the movie released, as well who the top billboard artist of that year was - all to help immerse you in what the culture must have felt like at the time.
        <br /><br />So pick a movie, read an article about the concurrent world event, take a listen to the year's top artist, and immerse yourself in a film.
        <br /><br /><br /><br /><br /><br /><br /><br />MovieGoer is built on a vast relational database using API data from the International Movie Database to provide you recommendations. This would not be possible without IMDB's great wealth of recorded knowledge.
        <br /><br />
     </h1>
</div>
