@model IMDBViewModel //this is passed to the homecontroller when you post

@{
    
    ViewData["Title"] = "Go Find Movies!";
}


@*@foreach (var movie in Model.movieList) {
    <div class="text-center">
       <p>  @movie.title </p>
    </div>
}*@


<!-- this is the input box below -->
<div> 
    @using (Html.BeginForm("IMDB", "Home", FormMethod.Post))
    {<table cellpadding="0" cellspacing="0">
            <tr>
                <th colspan="2" align="center">Enter a keyword for a movie you would like to watch. This could be a topic, a genre, a place, an event, or any other attribute.</th> 
                <!-- entering a keyword above should search for Titles AND Genres OR if you enter a year (4 digits) it will search by that-->
            </tr>
            <tr>
                <td>keyword:</td>
                <td>
                    @Html.TextBoxFor(m => m.titleInput)
                </td>
            </tr>
            <tr>
                <td></td>
                <td><input type="submit" value="Submit"/></td>
            </tr>
        </table>}
</div>



<!-- displays on the page if model is not null and we've hit submit-->
<div >
@if (Model != null && Model.submitted)
{
    <p>Searched keyword: <strong> @Html.DisplayFor(m => m.titleInput) </strong></p> 
    <p>Done! Here is what I found for you. </p> 


<table class="table table-bordered">
    <thead class="table-new">
    <tr>
        <th>
            Watched
        </th>
        <th>
            Title
        </th>
        <th>
            Rating
        </th>
        <th>
            Genre
        </th>
        <th>
            Runtime
        </th>
        <th>
            Event
        </th>
    </tr>
    </thead>
    <tbody>
        @for(int i = 0; i < Model.movieList.Count; i++)
        {
            if (!Model.returnedMovieTitles.Contains(Model.movieList[i].title))
            {
                <tr>
                    <td>
                         @*recolor the row if watched*@
                        @Html.CheckBoxFor(m=> m.movieList[i].isWatched)
                    </td>
                    <td>
                <p> <strong>@Html.DisplayFor(model => Model.movieList[i].title)  <br /> </strong></p>
                    </td>
                    <td>
                        @Html.DisplayFor(model => Model.movieList[i].rating)
                    </td>
                    <td>
                        @Html.DisplayFor(model => Model.movieList[i].genre)
                    </td>
                    <td>
                        @Html.DisplayFor(model => Model.movieList[i].runtime)
                    </td>
                    <td>
                        @Html.DisplayFor(model => Model.movieList[i].worldEvent)
                    </td>
                    </tr>

                    //how to display in table with other data?
                    Model.returnedMovieTitles.Add(Model.movieList[i].title);
                }
        }
        </tbody>

</table>
@*        <script> //js fill table
            function(){
                var 
            }
        </script>*@
        
@*</div>*@
}
<br />
</div>





@*<button type="button" href="@Url.Action("BuildDatabase", "Home")">Build Database</button>*@
@*no longer used, this was to import the data from the json file*@







